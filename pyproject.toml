[project]
name = "promptforge-mcp-server"
version = "1.0.0"
description = "基于FastMCP的PromptForge AI提示工程服务 - 分析、执行、评估和管理提示"
readme = "PROMPTFORGE_MCP_README.md"
requires-python = ">=3.11"
keywords = ["ai", "llm", "prompt-engineering", "mcp", "fastmcp", "claude"]
authors = [
    { name = "PromptForge Team" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

# 核心依赖
dependencies = [
    "fastmcp>=2.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "typing-extensions>=4.0.0",
    "python-dotenv>=1.0.0",
]

# 可选依赖组
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

# 项目脚本入口点
[project.scripts]
promptforge-mcp = "promptforge_mcp.main:main"

# 项目URLs
[project.urls]
Homepage = "https://github.com/insaanimanav/promptforge"
Documentation = "https://github.com/insaanimanav/promptforge/blob/main/PROMPTFORGE_MCP_README.md"
Repository = "https://github.com/insaanimanav/promptforge"
"Bug Tracker" = "https://github.com/insaanimanav/promptforge/issues"

# uv 特定配置
[tool.uv]
# 这是一个应用程序，不是Python包
package = false

# 默认依赖组
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "black>=23.0.0",
    "ruff>=0.1.0",
]

# 源配置（如果需要特定源）
# [tool.uv.sources]
# 这里可以配置特定的包源

# Python代码格式化配置
[tool.black]
line-length = 88
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # 排除目录
  \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

# Ruff linting配置
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["F401", "F811"]

# pytest配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# 覆盖率配置
[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 